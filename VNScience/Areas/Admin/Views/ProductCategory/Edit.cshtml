@model VNScience.Models.Core.ProductCategory
@using VNScience.Models.Core
@using VNScience.Common
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    var otherCategories = (List<ProductCategory>)ViewBag.OtherCategories;
}

<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("Edit", "ProductCategory", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Chỉnh sửa thông tin giải pháp</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CreatedAt)
                @Html.HiddenFor(model => model.CreatedBy)
                @Html.HiddenFor(model => model.UpdatedAt)
                @Html.HiddenFor(model => model.UpdatedBy)
                @Html.HiddenFor(model => model.CoverImage)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CoverImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="form-group">
                            <img src="@Model.CoverImage" style="width: 100px" alt="Alternate Text" />
                        </div>
                        <input type="file" name="CoverImage" class="form-control" />
                        @Html.ValidationMessageFor(model => model.CoverImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="Description" name="Description">@Model.Description</textarea>
                        @Html.ValidationMessageFor(model => model.CoverImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (otherCategories.Count() > 0)
                        {
                            <ul class="list-group">
                                @foreach (var category in otherCategories)
                                {
                                    if (category.Parent == null)
                                    {
                                        <li class="list-group-item">

                                            <span>@category.Name</span> <span>(@category.DisplayOrder)</span>
                                            @if (category.Children.Count > 0)
                                            {
                                                <ul>
                                                    @foreach (var child in category.Children)
                                                    {
                                                        <li>@child.Name (@child.DisplayOrder)</li>
                                                    }
                                                </ul>
                                            }
                                        </li>
                                    }
                                }
                            </ul>
                        }
                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            Html.RenderAction("Select", "Common", (MySelectList)ViewBag.Parents);
                        }
                        @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Lưu" class="btn btn-success" />
                        @Html.ActionLink("Quay về danh sách", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section scripts {
    <script src="//cdn.ckeditor.com/4.10.1/standard/ckeditor.js"></script>
    <script>
        var editor = CKEDITOR.replace('Description');
    </script>
}
